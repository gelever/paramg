CXX := mpic++
AR := ar
CXX_FLAGS := -g -O1 -Wall -Werror -std=c++14

SRC_DIR := src
OBJ_DIR := obj
BUILD_DIR := build
TEST_DIR := tests

LINALG_DIR := $(HOME)/Code/linalgcpp
PARLINALG_DIR := $(HOME)/Code/parlinalgcpp
PARTITION_DIR := $(HOME)/Code/partition
HYPRE_DIR := $(HOME)/hypre
MPICH_DIR := $(HOME)/mpich

LIBS := -L$(PARLINALG_DIR) -l parlinalgcpp $(HYPRE_DIR)/lib/libHYPRE.a -l metis -L$(LINALG_DIR) -l linalgcpp -llapack -lblas -lm

INCLUDES := $(HYPRE_DIR)/include $(LINALG_DIR)/src $(PARTITION_DIR)/src $(PARLINALG_DIR)/src $(SRC_DIR)
INCS := $(addprefix -I, $(INCLUDES))

SRC := $(wildcard $(SRC_DIR)/*.cpp)
OBJS := $(patsubst %.cpp,$(OBJ_DIR)/%.o,$(notdir $(SRC)))
PROGS := amg
TESTS := $(notdir $(basename $(wildcard $(TEST_DIR)/*.cpp)))

all: $(OBJS) $(PROGS) $(TESTS)

$(PROGS): $(OBJS)
	@mkdir -p $(BUILD_DIR)
	$(CXX) $(INCS) $(CXX_FLAGS) $^ $@.cpp $(LIBS) -o $(BUILD_DIR)/$@

$(TESTS): $(OBJS)
	@mkdir -p $(BUILD_DIR)/tests
	$(CXX) $(INCS) $(CXX_FLAGS) $^ $(TEST_DIR)/$@.cpp $(LIBS) -o $(BUILD_DIR)/tests/$@

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	@mkdir -p $(OBJ_DIR)
	$(CXX) $(INCS) $(CXX_FLAGS) -c $< -o $@

clean:
	@rm -rf $(OBJ_DIR)/*.o
	@rm -rf $(addprefix $(BUILD_DIR)/, $(PROGS))

.PHONY: all clean
